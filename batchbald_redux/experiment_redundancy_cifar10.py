# AUTOGENERATED! DO NOT EDIT! File to edit: 09a_experiment_redundancy_cifar10.ipynb (unless otherwise specified).

__all__ = ['configs']

# Cell

import dataclasses
import traceback

from blackhc.project import is_run_from_ipython
from blackhc.project.experiment import embedded_experiments

from batchbald_redux import acquisition_functions
from .unified_experiment import UnifiedExperiment

# Cell

configs = [
    UnifiedExperiment(
        seed=seed + 8945,
        acquisition_function=acquisition_function,
        acquisition_size=acquisition_size,
        num_pool_samples=num_pool_samples,
        initial_training_set_size=1000,
        evaluation_set_size=0,
        max_training_set=15000,
        temperature=temperature,
        id_dataset_name="CIFAR-10",
        ood_dataset_name=None,
        ood_exposure=False,
        id_repetitions=id_repetitions,
        add_dataset_noise=True

    )
    for seed in range(5)
    for acquisition_function in [
        acquisition_functions.SoftmaxBALD,
    ]
    for acquisition_size in [3000]
    for num_pool_samples in [100]
    for temperature in [1/64]
    for id_repetitions in [1,5,10,20]
] + [
    UnifiedExperiment(
        seed=seed + 8945,
        acquisition_function=acquisition_function,
        acquisition_size=acquisition_size,
        num_pool_samples=num_pool_samples,
        initial_training_set_size=1000,
        evaluation_set_size=0,
        max_training_set=15000,
        temperature=temperature,
        id_repetitions=id_repetitions,
        add_dataset_noise=True,
        id_dataset_name="CIFAR-10",
        ood_dataset_name=None,
        ood_exposure=False,
    )
    for seed in range(5)
    for acquisition_function in [
        acquisition_functions.BALD,
    ]
    for acquisition_size in [3000]
    for num_pool_samples in [100]
    for temperature in [0]
    for id_repetitions in [1,5,10,20]
]

if not is_run_from_ipython() and __name__ == "__main__":
    for job_id, store in embedded_experiments(__file__, len(configs)):
        config = configs[job_id]
        config.seed += job_id
        print(config)
        store["config"] = dataclasses.asdict(config)
        store["log"] = {}

        try:
            config.run(store=store)
        except Exception:
            store["exception"] = traceback.format_exc()
            raise
# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"compute_conditional_entropy": "01_batchbald.ipynb",
         "compute_entropy": "01_batchbald.ipynb",
         "CandidateBatch": "01_batchbald.ipynb",
         "BatchBALDScorer": "01_batchbald.ipynb",
         "get_batchbald_batch": "01_batchbald.ipynb",
         "get_bald_scores": "01_batchbald.ipynb",
         "get_top_k_scorers": "01_batchbald.ipynb",
         "get_bald_batch": "01_batchbald.ipynb",
         "get_batchbaldical_batch": "01_batchbald.ipynb",
         "compute_each_conditional_entropy": "01_batchbald.ipynb",
         "get_thompson_bald_batch": "01_batchbald.ipynb",
         "get_top_random_scorers": "01_batchbald.ipynb",
         "get_random_bald_batch": "01_batchbald.ipynb",
         "get_bald_ical_scores": "01_batchbald.ipynb",
         "get_bald_ical_batch": "01_batchbald.ipynb",
         "get_top_random_bald_ical_batch": "01_batchbald.ipynb",
         "get_sampled_tempered_scorers": "01_batchbald.ipynb",
         "get_ical_scores": "01_batchbald.ipynb",
         "get_batchical_batch": "01_batchbald.ipynb",
         "get_coreset_bald_scores": "01_batchbald.ipynb",
         "get_batch_coreset_bald_batch": "01_batchbald.ipynb",
         "JointEntropy": "02_joint_entropy_computation.ipynb",
         "ExactJointEntropy": "02_joint_entropy_computation.ipynb",
         "batch_multi_choices": "02_joint_entropy_computation.ipynb",
         "gather_expand": "02_joint_entropy_computation.ipynb",
         "gather_expand.DEBUG_CHECKS": "02_joint_entropy_computation.ipynb",
         "SampledJointEntropy": "02_joint_entropy_computation.ipynb",
         "DynamicJointEntropy": "02_joint_entropy_computation.ipynb",
         "BayesianModule": "03_consistent_mc_dropout.ipynb",
         "ConsistentMCDropout": "03_consistent_mc_dropout.ipynb",
         "ConsistentMCDropout2d": "03_consistent_mc_dropout.ipynb",
         "SamplerModel": "03_consistent_mc_dropout.ipynb",
         "multi_sample_loss": "03_consistent_mc_dropout.ipynb",
         "geometric_mean_loss": "03_consistent_mc_dropout.ipynb",
         "GeometricMeanPrediction": "03_consistent_mc_dropout.ipynb",
         "ActiveLearningData": "04_active_learning.ipynb",
         "RandomFixedLengthSampler": "04_active_learning.ipynb",
         "FastMNIST": "05a_fast_mnist.ipynb",
         "NamedDataset": "05b_dataset_challenges.ipynb",
         "OverridenTargetDataset": "05b_dataset_challenges.ipynb",
         "CorruptedLabelsDataset": "05b_dataset_challenges.ipynb",
         "RandomLabelsDataset": "05b_dataset_challenges.ipynb",
         "get_class_indices": "05b_dataset_challenges.ipynb",
         "get_balanced_sample_indices": "05b_dataset_challenges.ipynb",
         "ImbalancedDataset": "05b_dataset_challenges.ipynb",
         "ImbalancedClassSplitDataset": "05b_dataset_challenges.ipynb",
         "OneHotDataset": "05b_dataset_challenges.ipynb",
         "RepeatedDataset": "05b_dataset_challenges.ipynb",
         "SubsetDataset": "05b_dataset_challenges.ipynb",
         "ConstantTargetDataset": "05b_dataset_challenges.ipynb",
         "UniformTargetDataset": "05b_dataset_challenges.ipynb",
         "AdditiveGaussianNoise": "05b_dataset_challenges.ipynb",
         "dataset_to_tensors": "05b_dataset_challenges.ipynb",
         "get_dataset_state_dict": "05b_dataset_challenges.ipynb",
         "ImportedDataset": "05b_dataset_challenges.ipynb",
         "save_dataset": "05b_dataset_challenges.ipynb",
         "load_dataset": "05b_dataset_challenges.ipynb",
         "get_base_dataset": "05b_dataset_challenges.ipynb",
         "get_base_index": "05b_dataset_challenges.ipynb",
         "get_target": "05b_dataset_challenges.ipynb",
         "get_targets": "05b_dataset_challenges.ipynb",
         "create_repeated_MNIST_dataset": "05b_dataset_challenges.ipynb",
         "create_MNIST_dataset": "05b_dataset_challenges.ipynb",
         "RestoringEarlyStopping": "05c_restoring_early_stopping.ipynb",
         "train": "07_black_box_training.ipynb",
         "evaluate": "07_black_box_training.ipynb",
         "create_metrics": "07_black_box_training.ipynb",
         "LOG_INTERVAL": "07_black_box_training.ipynb",
         "get_predictions_labels": "07_black_box_training.ipynb",
         "get_predictions": "07_black_box_training.ipynb",
         "get_log_mean_probs": "07_black_box_training.ipynb",
         "PoolPredictions": "09a_acquisition_functions.ipynb",
         "CoreSetPoolPredictions": "09a_acquisition_functions.ipynb",
         "CandidateBatchComputer": "09a_acquisition_functions.ipynb",
         "Random": "09a_acquisition_functions.ipynb",
         "PoolScorerCandidateBatchComputer": "09a_acquisition_functions.ipynb",
         "BALD": "09a_acquisition_functions.ipynb",
         "TemperedBALD": "09a_acquisition_functions.ipynb",
         "RandomBALD": "09a_acquisition_functions.ipynb",
         "ThompsonBALD": "09a_acquisition_functions.ipynb",
         "BatchBALD": "09a_acquisition_functions.ipynb",
         "CoreSetPoolScorerCandidateBatchComputer": "09a_acquisition_functions.ipynb",
         "CoreSetBALD": "09a_acquisition_functions.ipynb",
         "TemperedCoreSetBALD": "09a_acquisition_functions.ipynb",
         "BatchCoreSetBALD": "09a_acquisition_functions.ipynb",
         "EvalCandidateBatchComputer": "09a_acquisition_functions.ipynb",
         "EvaluationPoolScorerCandidateBatchComputer": "09a_acquisition_functions.ipynb",
         "EvalBALD": "09a_acquisition_functions.ipynb",
         "TemperedEvalBALD": "09a_acquisition_functions.ipynb",
         "BatchEvalBALD": "09a_acquisition_functions.ipynb",
         "EIG": "09a_acquisition_functions.ipynb",
         "TemperedEIG": "09a_acquisition_functions.ipynb",
         "PredictionDataset": "09b_experiment.ipynb",
         "mnist_initial_samples": "09b_experiment.ipynb",
         "Experiment": "09b_experiment.ipynb",
         "configs": "09b_experiment.ipynb",
         "BayesianMNISTCNN": "A1_some_models.ipynb",
         "BayesianMNISTCNN_EBM": "A1_some_models.ipynb",
         "DependencyInjection": "Z_dependency_injection.ipynb"}

modules = ["batchbald.py",
           "joint_entropy.py",
           "consistent_mc_dropout.py",
           "active_learning.py",
           "fast_mnist.py",
           "dataset_challenges.py",
           "restoring_early_stopping.py",
           "black_box_model_training.py",
           "acquisition_functions.py",
           "experiment.py",
           "example_models.py",
           "di.py"]

doc_url = "https://blackhc.github.io/batchbald_redux/"

git_url = "https://github.com/blackhc/batchbald_redux/tree/master/"

def custom_doc_links(name): return None

# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"compute_conditional_entropy": "02_joint_entropy_computation.ipynb",
         "compute_entropy": "02_joint_entropy_computation.ipynb",
         "JointEntropy": "02_joint_entropy_computation.ipynb",
         "ExactJointEntropy": "02_joint_entropy_computation.ipynb",
         "batch_multi_choices": "02_joint_entropy_computation.ipynb",
         "gather_expand": "02_joint_entropy_computation.ipynb",
         "gather_expand.DEBUG_CHECKS": "02_joint_entropy_computation.ipynb",
         "SampledJointEntropy": "02_joint_entropy_computation.ipynb",
         "DynamicJointEntropy": "02_joint_entropy_computation.ipynb",
         "GradEmbeddingType": "03_consistent_mc_dropout.ipynb",
         "PredictionsLabels": "03_consistent_mc_dropout.ipynb",
         "freeze_encoder_context": "03_consistent_mc_dropout.ipynb",
         "BayesianModule": "03_consistent_mc_dropout.ipynb",
         "bmodule_get_embeddings": "03_consistent_mc_dropout.ipynb",
         "bmodule_get_grad_embeddings": "03_consistent_mc_dropout.ipynb",
         "bmodule_get_no_dropout_predictions_labels": "03_consistent_mc_dropout.ipynb",
         "bmodule_get_predictions_labels": "03_consistent_mc_dropout.ipynb",
         "ConsistentMCDropout": "03_consistent_mc_dropout.ipynb",
         "ConsistentMCDropout2d": "03_consistent_mc_dropout.ipynb",
         "SamplerModel": "03_consistent_mc_dropout.ipynb",
         "multi_sample_loss": "03_consistent_mc_dropout.ipynb",
         "geometric_mean_loss": "03_consistent_mc_dropout.ipynb",
         "GeometricMeanPrediction": "03_consistent_mc_dropout.ipynb",
         "LogProbMeanPrediction": "03_consistent_mc_dropout.ipynb",
         "get_log_mean_probs": "03_consistent_mc_dropout.ipynb",
         "assert_no_shuffling_no_augmentations_dataloader": "03_consistent_mc_dropout.ipynb",
         "get_bayesian_ensemble_predictions_labels": "03_consistent_mc_dropout.ipynb",
         "CINIC10": "05b_cinic-10.ipynb",
         "DatasetIndex": "05b_dataset_challenges.ipynb",
         "AliasDataset": "05b_dataset_challenges.ipynb",
         "get_base_dataset_index": "05b_dataset_challenges.ipynb",
         "get_index": "05b_dataset_challenges.ipynb",
         "get_num_classes": "05b_dataset_challenges.ipynb",
         "get_target": "05b_dataset_challenges.ipynb",
         "get_targets": "05b_dataset_challenges.ipynb",
         "SubsetAliasDataset": "05b_dataset_challenges.ipynb",
         "ReplaceTargetsDataset": "05b_dataset_challenges.ipynb",
         "NamedDataset": "05b_dataset_challenges.ipynb",
         "split": "05b_dataset_challenges.ipynb",
         "OverrideTargetsDataset": "05b_dataset_challenges.ipynb",
         "CorruptedLabelsDataset": "05b_dataset_challenges.ipynb",
         "RandomLabelsDataset": "05b_dataset_challenges.ipynb",
         "get_class_indices_by_class": "05b_dataset_challenges.ipynb",
         "get_class_indices": "05b_dataset_challenges.ipynb",
         "get_balanced_sample_indices": "05b_dataset_challenges.ipynb",
         "get_balanced_sample_indices_by_class": "05b_dataset_challenges.ipynb",
         "ImbalancedDataset": "05b_dataset_challenges.ipynb",
         "ImbalancedClassSplitDataset": "05b_dataset_challenges.ipynb",
         "OneHotDataset": "05b_dataset_challenges.ipynb",
         "RepeatedDataset": "05b_dataset_challenges.ipynb",
         "RandomSubsetDataset": "05b_dataset_challenges.ipynb",
         "ConstantTargetDataset": "05b_dataset_challenges.ipynb",
         "UniformTargetDataset": "05b_dataset_challenges.ipynb",
         "AdditiveGaussianNoise": "05b_dataset_challenges.ipynb",
         "dataset_to_tensors": "05b_dataset_challenges.ipynb",
         "get_dataset_state_dict": "05b_dataset_challenges.ipynb",
         "ImportedDataset": "05b_dataset_challenges.ipynb",
         "save_dataset": "05b_dataset_challenges.ipynb",
         "load_dataset": "05b_dataset_challenges.ipynb",
         "create_named_mnist": "05b_dataset_challenges.ipynb",
         "create_repeated_MNIST_dataset": "05b_dataset_challenges.ipynb",
         "create_MNIST_dataset": "05b_dataset_challenges.ipynb",
         "SplitDataset": "05c_more_datasets.ipynb",
         "SplitDataLoader": "05c_more_datasets.ipynb",
         "train_validation_split": "05c_more_datasets.ipynb",
         "get_SVHN": "05c_more_datasets.ipynb",
         "get_CIFAR10": "05c_more_datasets.ipynb",
         "get_CINIC10": "05c_more_datasets.ipynb",
         "get_CIFAR100": "05c_more_datasets.ipynb",
         "get_MNIST": "05c_more_datasets.ipynb",
         "get_DirtyMNIST": "05c_more_datasets.ipynb",
         "get_DistributionalAmbiguousMNIST": "05c_more_datasets.ipynb",
         "get_FashionMNIST": "05c_more_datasets.ipynb",
         "get_EMNIST": "05c_more_datasets.ipynb",
         "get_balanced_EMNIST": "05c_more_datasets.ipynb",
         "CIFAR10_NORMALIZE": "05c_more_datasets.ipynb",
         "CIFAR10_BATCH_NORMALIZE": "05c_more_datasets.ipynb",
         "CIFAR10_BATCH_DENORMALIZE": "05c_more_datasets.ipynb",
         "CINIC10_NORMALIZE": "05c_more_datasets.ipynb",
         "get_dataset": "05c_more_datasets.ipynb",
         "get_dataloaders": "05c_more_datasets.ipynb",
         "get_dataloaders_by_name": "05c_more_datasets.ipynb",
         "dataset_factories": "05c_more_datasets.ipynb",
         "RestoringEarlyStopping": "05c_restoring_early_stopping.ipynb",
         "PatienceWithSnapshot": "05c_restoring_early_stopping.ipynb",
         "suggest_limit_schedule": "05c_restoring_early_stopping.ipynb",
         "ModuleOptimizerSnapshotter": "05c_restoring_early_stopping.ipynb",
         "ReduceLROnPlateauWithSchedule": "05c_restoring_early_stopping.ipynb",
         "lr_step_after_epoch": "05c_restoring_early_stopping.ipynb",
         "ReduceLROnPlateauWithScheduleWrapper": "05c_restoring_early_stopping.ipynb",
         "BayesianEMNISTCNN": "06b_emnist_models.ipynb",
         "EMnistOptimizerFactory": "06b_emnist_models.ipynb",
         "EMnistModelTrainer": "06b_emnist_models.ipynb",
         "BayesianMNISTCNN": "06b_mnist_models.ipynb",
         "BayesianMNISTCNN_EBM": "06b_mnist_models.ipynb",
         "MnistOptimizerFactory": "06b_mnist_models.ipynb",
         "MnistModelTrainer": "06b_mnist_models.ipynb",
         "conv3x3": "06c_resnet_models.ipynb",
         "conv1x1": "06c_resnet_models.ipynb",
         "BasicBlock": "06c_resnet_models.ipynb",
         "Bottleneck": "06c_resnet_models.ipynb",
         "BayesianResNet": "06c_resnet_models.ipynb",
         "bayesian_resnet18": "06c_resnet_models.ipynb",
         "bayesian_resnet34": "06c_resnet_models.ipynb",
         "model_urls": "06c_resnet_models.ipynb",
         "Cifar10BayesianResnetFactory": "06c_resnet_models.ipynb",
         "Cifar10DeterministicResnetFactory": "06c_resnet_models.ipynb",
         "Cifar10ModelWorkshopPaperTrainer": "06c_resnet_models.ipynb",
         "Cifar10ModelTrainer": "06c_resnet_models.ipynb",
         "wandb_log_training": "07_black_box_training.ipynb",
         "train": "07_black_box_training.ipynb",
         "LOG_INTERVAL": "07_black_box_training.ipynb",
         "train_with_schedule": "07_black_box_training.ipynb",
         "train_with_cosine_annealing": "07_black_box_training.ipynb",
         "ModelOptimizerStateDicts": "07_black_box_training.ipynb",
         "DoubleSnapshots": "07_black_box_training.ipynb",
         "train_double_snapshots": "07_black_box_training.ipynb",
         "evaluate": "07_black_box_training.ipynb",
         "evaluate_old": "07_black_box_training.ipynb",
         "create_metrics": "07_black_box_training.ipynb",
         "ExperimentData": "09g_experiment_cifar10_xmi_labels_clean.ipynb",
         "ExperimentDataConfig": "09g_experiment_cifar10_xmi_labels_clean.ipynb",
         "OoDDatasetConfig": "08b_experiment_data.ipynb",
         "StandardExperimentDataConfig": "08b_experiment_data.ipynb",
         "load_standard_experiment_data": "08b_experiment_data.ipynb",
         "ImbalancedTestDistributionExperimentDataConfig": "08b_experiment_data.ipynb",
         "load_imbalanced_experiment_data": "08b_experiment_data.ipynb",
         "OODClassesDistributionExperimentDataConfig": "08b_experiment_data.ipynb",
         "load_ood_classes_experiment_data": "08b_experiment_data.ipynb",
         "CinicCifarShiftExperimentDataConfig": "08b_experiment_data.ipynb",
         "load_cinic_cifar_shift_experiment_data": "08b_experiment_data.ipynb",
         "ActiveLearner": "U_predetermined_acquisitions_70.ipynb",
         "UnifiedExperiment": "U_predetermined_acquisitions_70.ipynb",
         "configs": "U_predetermined_acquisitions_70.ipynb",
         "SampledExperimentData": "08e_sampling_unified_experiment.ipynb",
         "SampledExperimentDataConfig": "08e_sampling_unified_experiment.ipynb",
         "get_class_indices_by_class_distribution": "08e_sampling_unified_experiment.ipynb",
         "get_class_indices_distribution": "08e_sampling_unified_experiment.ipynb",
         "get_balanced_indices_from_distribution": "08e_sampling_unified_experiment.ipynb",
         "load_distribution_experiment_data": "08e_sampling_unified_experiment.ipynb",
         "SampledActiveLearner": "08e_sampling_unified_experiment.ipynb",
         "SampledUnifiedExperiment": "08e_sampling_unified_experiment.ipynb",
         "shared_configs": "09a_experiment_cifar10_cinic10.ipynb",
         "coldness_range": "09b_experiment_repeated_mnist_bald.ipynb",
         "configs_old": "09b_experiment_repeated_mnist_bald.ipynb",
         "asclassdict": "09b_experiment_wandb_spike.ipynb",
         "mnist_initial_samples": "09f_experiment_xmi_labels.ipynb",
         "Experiment": "D_poc_online_bayesian_inference.ipynb",
         "compute_entropy_from_probs": "D_poc_online_bayesian_inference.ipynb",
         "load_experiment_data": "09g_experiment_cifar10_xmi_labels_clean.ipynb",
         "training_set_90": "D_poc_online_bayesian_inference.ipynb",
         "training_set_random": "D_poc_online_bayesian_inference.ipynb",
         "CustomBALD": "U_examine_BALD_rank_correlations.ipynb",
         "experiment": "U_examine_BALD_rank_correlations.ipynb",
         "results": "U_examine_BALD_rank_correlations.ipynb",
         "additional_initial_acquisitions": "U_predetermined_acquisitions_70.ipynb",
         "predetermind_acquisition_base_indices": "U_predetermined_acquisitions_70.ipynb",
         "DependencyInjection": "Z_dependency_injection.ipynb",
         "T": "Z_dependency_injection.ipynb",
         "logmatmulexp": "Z_logmatmulexp.ipynb"}

modules = ["joint_entropy.py",
           "consistent_mc_dropout.py",
           "cinic10.py",
           "dataset_challenges.py",
           "datasets.py",
           "restoring_early_stopping.py",
           "emnist_models.py",
           "models.py",
           "resnet_models.py",
           "black_box_model_training.py",
           "experiment_data.py",
           "unified_experiment.py",
           "sampling_unified_experiment.py",
           "experiment_cifar10_cinic10.py",
           "experiment_redundancy_cifar10.py",
           "experiment_cifar10_coreset_pig.py",
           "experiment_emnist.py",
           "experiment_mnist_coreset_pig.py",
           "experiment_epig_bootstrap_ablation.py",
           "experiment_epig_vs_eval_vs_bald.py",
           "experiment_mnist_missing_classes_coreset_pig.py",
           "experiment_repeated_acquisition_dirty_mnist.py",
           "experiment_repeated_mnist.py",
           "experiment_wandb_spike.py",
           "experiment_cifar10_missing_classes.py",
           "experiment_cifar10_ood_classes.py",
           "experiment_cifar10_svhn_ood.py",
           "experiment_cinic10_shift.py",
           "experiment_mnist_sieve_vs_bbald.py",
           "experiment_sieve_cifar10.py",
           "experiment_xmi_pred.py",
           "experiment_xmi_labels.py",
           "experiment_cifar10_xmi_labels_clean.py",
           "experiment_xmi_labels_clean.py",
           "poc_online_bayesian_inference.py",
           "extract_bald_scores.py",
           "predetermined_acquisitions_120.py",
           "predetermined_acquisitions_20.py",
           "predetermined_acquisitions_70.py",
           "di.py",
           "logmatmulexp.py"]

doc_url = "https://blackhc.github.io/batchbald_redux/"

git_url = "https://github.com/blackhc/batchbald_redux/tree/master/"

def custom_doc_links(name):
    return None
